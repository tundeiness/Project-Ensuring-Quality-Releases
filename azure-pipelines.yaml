name: Azure Pipelines

trigger:
  - main

pool:
  name: myAgentPool

variables:
  python_version: '3.7.17'
  azureServiceConnectionId: 'servixconnex'
  projectRoot: $(System.DefaultWorkingDirectory)
  environmentName: 'test'

stages:
  - stage: Build
    displayName: 'Build and Package FakeRestAPI'
    jobs:
      - job: Build
        displayName: 'Archive and Upload Artifact'
        pool:
          name: myAgentPool
        steps:
          # Uncomment if SSH key is needed for VM deployments
          # - task: InstallSSHKey@0
          #   inputs:
          #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
          #     sshPublicKey: 'PUBLIC_KEY'
          #     sshKeySecureFile: 'id_rsa'

          - task: ArchiveFiles@2
            displayName: 'Archive StarterAPIs.json'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/StarterAPIs.json'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-starterapis.zip'

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-starterapis.zip
            displayName: 'Upload Package'
            artifact: drop-fakerestapi

  - stage: Deploy
    displayName: 'Deploy to Azure'
    dependsOn: Build
    jobs:
      - deployment: FakeRestAPI
        displayName: 'Deploy Web App'
        pool:
          name: myAgentPool
        environment: 'TEST'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Deploy Azure Web App'
                  inputs:
                    azureSubscription: '$(azureServiceConnectionId)'
                    appName: 'myApplication-AppService'
                    appType: webApp
                    package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-starterapis.zip

      # Optional VM Deployment Block
      # - deployment: VMDeploy
      #   displayName: 'Deploy to VM'
      #   environment:
      #     name: '<environment-name>'
      #     resourceType: VirtualMachine
      #     tags: '<tag-name>'
      #   strategy:
      #     runOnce:
      #       deploy:
      #         steps:
      #           - task: Bash@3
      #             inputs:
      #               targetType: 'inline'
      #               script: |
      #                 #! /bin/bash
      #                 sudo apt-get upgrade -y
      #                 sudo apt-get install python3-pip -y
      #                 sudo apt-get install unzip -y
      #                 sudo apt-get install -y chromium-browser
      #                 pip3 install selenium
      #                 export PATH=$PATH:/some/path
