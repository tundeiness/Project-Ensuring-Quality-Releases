name: Azure Pipelines

trigger:
  branches:
    include:
      - main

pool:
  name: myAgentPool

variables:
  - group: azure-credentials
  - group: azure-storage-key
  - name: python_version
    value: '3.8.10'
  - name: azureServiceConnectionId
    value: 'ServiceConnex'
  - name: projectRoot
    value: '$(System.DefaultWorkingDirectory)'
  # - name: environmentName
  #   value: myAgentVM

stages:
  - stage: Build
    displayName: 'Infrastructure'
    jobs:
      - job: BuildInfrastructure
        displayName: 'Infrastructure Provisioning'
        steps:
          - task: Bash@3
            displayName: 'Install Postman & Newman'
            inputs:
              targetType: 'inline'
              script: |
                echo "Installing Postman & Newman"
                pwd

          - task: InstallSSHKey@0
            inputs:
              sshPublicKey: 'ssh-rsa AAAA...'
              sshKeySecureFile: 'id_rsa'
              knownHostsEntry: '20.4.59.156 ssh-rsa AAAA...'

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.5.7'

          - task: Bash@3
            displayName: 'Terraform Init (manual)'
            inputs:
              targetType: 'inline'
              script: |
                echo "Running Terraform Init"
                export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
                export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
                export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
                export ARM_TENANT_ID=$(ARM_TENANT_ID)

                cd $(projectRoot)/terraform/environments/test

                terraform init \
                  -backend-config="storage_account_name=tfstated7c7e6320bea" \
                  -backend-config="container_name=tfstate" \
                  -backend-config="key=test.terraform.tfstate" \
                  -backend-config="resource_group_name=Azuredevops" \
                  -backend-config="subscription_id=$ARM_SUBSCRIPTION_ID" \
                  -backend-config="tenant_id=$ARM_TENANT_ID"

          - task: Bash@3
            displayName: 'Terraform Plan (manual)'
            inputs:
              targetType: 'inline'
              script: |
                echo "Running Terraform Plan"
                export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
                export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
                export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
                export ARM_TENANT_ID=$(ARM_TENANT_ID)

                cd $(projectRoot)/terraform/environments/test
                terraform plan

          - task: Bash@3
            displayName: 'Terraform Apply (manual)'
            inputs:
              targetType: 'inline'
              script: |
                echo "Running Terraform Apply"
                export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
                export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
                export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
                export ARM_TENANT_ID=$(ARM_TENANT_ID)

                cd $(projectRoot)/terraform/environments/test
                terraform apply -auto-approve
