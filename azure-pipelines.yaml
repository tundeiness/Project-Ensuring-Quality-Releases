name: Azure Pipelines

trigger:
  branches:
    include:
      - main

pool:
  name: myAgentPool

variables:
  python_version: '3.8.10'
  azureServiceConnectionId: 'ServiceConnex'
  projectRoot: '$(System.DefaultWorkingDirectory)'
  environmentName: 'myAgentVM'

stages:
  - stage: Build
    displayName: 'Infrastructure'
    jobs:
      - job: BuildInfrastructure
        displayName: 'Infrastructure Provisioning'
        steps:
          - task: Bash@3
            displayName: 'Install Postman & Newman'
            inputs:
              targetType: 'inline'
              script: |
                echo "Installing Postman & Newman"
                pwd

          - task: InstallSSHKey@0
            displayName: 'Install SSH Key'
            inputs:
              sshPublicKey: 'ssh-rsa AAAA...'
              sshKeySecureFile: 'id_rsa'
              knownHostsEntry: '20.4.59.156 ssh-rsa AAAA...'

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.5.7'

          - task: Bash@3
            displayName: 'Export ARM_* Env Vars'
            inputs:
              targetType: 'inline'
              script: |
                echo "Exporting ARM credentials..."
                echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$(ARM_CLIENT_ID)"
                echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$(ARM_CLIENT_SECRET)"
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(ARM_SUBSCRIPTION_ID)"
                echo "##vso[task.setvariable variable=ARM_TENANT_ID]$(ARM_TENANT_ID)"

          - task: TerraformTaskV3@3
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(projectRoot)/terraform/environments/test'
              backendAzureRmResourceGroupName: 'Azuredevops'
              backendAzureRmStorageAccountName: 'tfstate1439615717'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'test.terraform.tfstate'

          - task: TerraformTaskV3@3
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(projectRoot)/terraform/environments/test'

          - task: TerraformTaskV3@3
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(projectRoot)/terraform/environments/test'
