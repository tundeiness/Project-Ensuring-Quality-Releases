name: azure-pipeline

trigger:
  branches:
    include:
      - main

pool:
  name: AgentPool

variables:
  python_version: '3.8.10'
  azureServiceConnectionId: 'ServiceConnex'
  projectRoot: '$(System.DefaultWorkingDirectory)'
  environmentName: 'test'

stages:
- stage: Build
  displayName: 'Provision Infrastructure'
  jobs:
  - job: BuildInfrastructure
    displayName: 'Terraform Infrastructure'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '1.0.5'

    - task: TerraformTaskV3@3
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(projectRoot)/terraform'
        backendServiceArm: '$(azureServiceConnectionId)'
        backendAzureRmResourceGroupName: 'Azuredevops'
        backendAzureRmStorageAccountName: 'tfstate1411330650'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'test.terraform.tfstate'
        ensureBackend: true

    - task: TerraformTaskV3@3
      displayName: 'Terraform Validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(projectRoot)/terraform'

    - task: TerraformTaskV3@3
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(projectRoot)/terraform'
        environmentServiceNameAzureRM: '$(azureServiceConnectionId)'

    - task: TerraformTaskV3@3
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(projectRoot)/terraform'
        environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
