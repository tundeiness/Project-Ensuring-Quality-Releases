name: Azure Pipelines

trigger:
  branches:
    include:
      - main

variables:
  python_version: '3.8.10'
  vm_ip: '128.251.185.59'
  vm_user: 'devopsagent'
  ssh_key: 'id_rsa.txt'  # File uploaded as Secure File
  azureServiceConnectionId: 'ServiceConnex'
  projectRoot: '$(System.DefaultWorkingDirectory)'
  environmentName: 'test'


stages:
- stage: Build
  displayName: 'Build and Package Web App'
  jobs:
  - job: Build
    displayName: 'Archive Web App'
    pool:
      name: myAgentPool
    steps:
    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '$(projectRoot)/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'

    - task: PublishBuildArtifacts@1
      displayName: 'Upload Package'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
        ArtifactName: 'drop-fakerestapi'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  jobs:
  - deployment: FakeRestAPI
    displayName: 'Deploy to Azure Web App'
    environment: 'TEST'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Build Artifact'
            inputs:
              artifact: 'drop-fakerestapi'
              path: '$(Pipeline.Workspace)'

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: 'ServiceConnex'
              appName: 'myApplication-AppService'
              appType: 'webApp'
              package: '$(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip'


