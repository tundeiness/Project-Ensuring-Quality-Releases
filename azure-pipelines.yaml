name: Azure Pipelines

trigger:
  branches:
    include:
      - main

pool:
  name: myAgentPool

variables:
  - group: azure-credentials
  - group: azure-storage-key
  - name: python_version
    value: '3.8.10'
  - name: azureServiceConnectionId
    value: 'ServiceConnex'
  - name: projectRoot
    value: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
  - name: environmentName
    value: 'test'

stages:
- stage: Build
  displayName: 'Provision Infrastructure'
  jobs:
  - job: BuildInfrastructure
    displayName: 'Build Infrastructure'
    steps:
    - task: Bash@3
      displayName: 'Install Postman & Newman'
      inputs:
        targetType: 'inline'
        script: |
          #!/bin/bash
          echo "Installing Postman & Newman"
          pwd

    - task: InstallSSHKey@0
      displayName: 'Install SSH Key'
      inputs:
        sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC...'
        sshKeySecureFile: 'id_rsa'
        knownHostsEntry: '52.183.198.36 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC...'

    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '1.5.7'

    - task: Bash@3
      displayName: 'Terraform Init'
      inputs:
        targetType: 'inline'
        script: |
          echo "Running Terraform Init"
          terraform version
          cd $(projectRoot)
          terraform init \
            -backend-config="resource_group_name=Azuredevops" \
            -backend-config="storage_account_name=tfstate319964560" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=test.terraform.tfstate"

    - task: Bash@3
      displayName: 'Terraform Plan'
      inputs:
        targetType: 'inline'
        script: |
          echo "Running Terraform Plan"
          cd $(projectRoot)
          terraform plan -detailed-exitcode

- stage: Deploy
  displayName: 'Apply Infrastructure'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployInfrastructure
    displayName: 'Deploy Infrastructure'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '1.5.7'

    - task: TerraformTaskV3@3
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(projectRoot)'
        environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
